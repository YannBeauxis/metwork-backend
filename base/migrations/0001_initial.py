# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-06-20 15:23
from __future__ import unicode_literals

import base.models.managers
import base.modules.file_management
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_rdkit.models.fields
from django_rdkit.operations import RDKitExtension


class Migration(migrations.Migration):

    initial = True

    run_before = [
        ("admin", "0001_initial"),
    ]

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("auth", "0008_alter_user_username_max_length"),
    ]

    operations = [
        RDKitExtension(),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("username", models.CharField(blank=True, max_length=30)),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                ("organization", models.CharField(max_length=30)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"verbose_name": "user", "verbose_name_plural": "users",},
            managers=[("objects", base.models.managers.UserManager()),],
        ),
        migrations.CreateModel(
            name="DefaultConf",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_class_name", models.CharField(default="", max_length=255)),
                ("app_name", models.CharField(default="", max_length=255)),
                ("conf_class_name", models.CharField(default="", max_length=255)),
                ("conf_default_id", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Molecule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=255)),
                (
                    "inchi_key",
                    models.CharField(
                        db_index=True, default=None, max_length=27, unique=True
                    ),
                ),
                ("mol_rdkit", django_rdkit.models.fields.MolField(default=None)),
                (
                    "smiles_with_limit",
                    models.CharField(db_index=True, default="", max_length=255),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(default="", max_length=64)),
                (
                    "description",
                    models.CharField(blank=True, default="", max_length=255, null=True),
                ),
                (
                    "status_code",
                    models.PositiveSmallIntegerField(db_index=True, default=0),
                ),
            ],
            options={"manager_inheritance_from_future": True,},
            bases=(base.modules.file_management.FileManagement, models.Model),
        ),
        migrations.CreateModel(
            name="ProjectProcess",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=True)),
                ("depth_total", models.IntegerField(default=0)),
                ("depth_last_match", models.IntegerField(default=0)),
                (
                    "molecule",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.Molecule",
                    ),
                ),
                (
                    "parent_process",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.ProjectProcess",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SampleAnnotationProject",
            fields=[
                (
                    "project_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="base.Project",
                    ),
                ),
                ("depth_total", models.IntegerField(default=0)),
                ("depth_last_match", models.IntegerField(default=0)),
                ("files_directory", models.FilePathField()),
            ],
            options={"manager_inheritance_from_future": True,},
            bases=("base.project",),
        ),
        migrations.AddField(
            model_name="projectprocess",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.Project"
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="molecules",
            field=models.ManyToManyField(to="base.Molecule"),
        ),
        migrations.AddField(
            model_name="project",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_base.project_set+",
                to="contenttypes.ContentType",
            ),
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
